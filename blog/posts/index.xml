<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 花辞树</title>
    <link>https://www.huacishu.com/blog/posts/</link>
    <description>Recent content in Posts on 花辞树</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 20 Mar 2023 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.huacishu.com/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>我的猫猫(2)</title>
      <link>https://www.huacishu.com/blog/2023/03/20/my-yy/</link>
      <pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2023/03/20/my-yy/</guid>
      <description>人生不过是体验，而过去了的再也回不来。
 第二次见猫猫是在认识她的第4天，
她约我去故宫散心，
那是我第一次去故宫，
第一次吃豌豆黄儿，
就在那天她成为了我的女朋友，
我和她有好多快乐的时光：
猫猫是lo娘，
她会哑着嗓子唱《小跳蛙》，
还喜欢蹲在地上装蘑菇🍄，
最喜欢喝欧泡果奶！
我摸她的头，
她会冲我“喵喵”叫（猫猫的称呼就是这么来的）。
猫猫有时是单马尾、有时是锁骨发，
而我最想要的是双马尾，
猫猫则表示“双马尾是男生的恶趣味”，想都不要想。
但是，某天晚上我们在礼堂的最后一排看演出时，
她饶有兴致把头发上的皮筋扯下来，
扎了一个双马尾。
 后来我渐渐发现猫猫是小巫女，
她给我讲《母兔兔的故事》，
她给我展示她写的小X文，
她常常要我吻她，
吻完则会气鼓鼓的对我说：“坏人！”，
因为我接吻时总是伸舌头。
但是我记得很清楚，
最开始是她这样教我的。
我和她经常晚上出去溜达，
冬天很冷，她的手放在我的兜兜里。
我记得最远的一次是从人大西门出发，哒哒哒北上，绕一个圈走到东门，然后再走到国家图书馆&amp;hellip;.
她曾说过和我在一起最开心的时候，就是我俩在琉璃厂溜达的晚上，
而我只是觉得那天晚上没有什么不同，和别的晚上一样好冷哇。
猫猫爱玩游戏，
她说工作后一定要买一台特别厉害电脑来打游戏！
某天她的笔记本的“P”键掉了，
最后在我的助攻下成功把零件搞丢，再也装不回去了，
（那个零件或许现在还在人大世纪馆二层某个不为人知的角落吧）
作为补偿我对她许诺，要给她买高配电脑打游戏！
我还要把导师给的研究课题搞出来，然后找个大厂算法工作~
可是后来我另她失望了，
面对去腾讯还是国家外汇管理局中央外汇业务中心，我选择了后者，
那个在当时条件下看似更稳妥的路，
她对我说我不是她的英雄了&amp;hellip;
我和猫猫最后的回忆留在了19年的5月，
我们一块去旅行，
第一天我们去了看了西湖~
第二天我们去了杭州“白马会所”漫展，
猫猫在那儿见到了一个D.VA的coser，最后靠打卡兑换到一顶假发！
第三天早上，我们出发去南京，
那天早上我问她&amp;rdquo;你喜欢我吗？&amp;rdquo;
她一如既往地回答“喜欢(≧∇≦)ﾉ”
可是最后还是因为一件事闹别扭了&amp;hellip;
在南京站，我去给猫猫买冰淇淋了，
这次猫猫再也也没有等我，
2019年5月4日，那是我这辈子最后一次见她。
后来那天我坐了很久的车，
在一个小商店见到了一瓶新奇的汽水，
之后每年的5月4号，
我都会买一瓶喝。
事实证明猫猫看事情总是很准，
后来我去外汇局，发现不过是一帮打着家国情怀的骗子，
而我告诉了他们什么叫做事狠。
我觉得这辈子遗憾的事情有好多，可真正后悔的只有一个，
那就是面对成为英雄的机会做出了懦弱的选择，
至此人生便迥然不同了。
再后来就是回人大读博的事了，
我没有对学术的向往，也没有能毕业的把握，只是觉得不该如此的。</description>
    </item>
    
    <item>
      <title>Grammarly Latex语法检查工具</title>
      <link>https://www.huacishu.com/blog/2022/08/27/my_grammarly/</link>
      <pubDate>Sat, 27 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/08/27/my_grammarly/</guid>
      <description>演示界面：https://huacishu.com/app/grammarly/ 源代码：Github 下载到本地使用：点击此处
这是做什么用的？ Latex中的一些符号（如公式$$、引用~\cite）会干扰Grammarly的语法检查， 例如这个句子中modalitiies拼写错误，但Grammarly无法检测出来: 为此我写了一个小工具，配合Grammarly的浏览器插件使用，去除latex中的符号以方便语法检查，检查完毕后再转换回去：
现有功能 去除注释、引用（~\cite、~\shortcite、 ~\ref、~\cref）与行内公式$$
例如对于如下内容：
%Some comments Bain~\shortcite{358_frozen} used a space-time transformer to % Inline comments Given an unlabeled video dataset $\mathcal{D}=\{x_i\}_{i=1}^N$, where each instance $x_i$ has two modalitiies: voice $x^v_i$ and face $x^f_i$.  点击“转换”会符号转变为编号[*]形式：
Bain[0] used a space-time transformer to Given an unlabeled video dataset [1], where each instance [2] has two modalities: voice [3] and face [4].  再点击“回写”则将编号替换回原内容:
Bain~\shortcite{358_frozen} used a space-time transformer to Given an unlabeled video dataset $\mathcal{D}=\{x_i\}_{i=1}^N$, where each instance $x_i$ has two modalities: voice $x^v_i$ and face $x^f_i$.</description>
    </item>
    
    <item>
      <title>反思我开发了五年的软件是如何终结的</title>
      <link>https://www.huacishu.com/blog/2022/08/22/rethink/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/08/22/rethink/</guid>
      <description>希望你能从我的经历中获得些许启发
 在沉寂两年后，或许是解决了人生的某个症结，或许是放下了某个执念，
我鼓足勇气启动了拾忆笔记的后台管理页面，了解一下近况：
2022年8月22日，9141用户量，以及十余位日活跃用户，或许这就是这款软件的最终归宿吧！
这两年我一直在反思，从2014年到如今，在这件事上做的太过艰难，又有过太多投入，为什么这件事最终还是走向终结了，
我对此的答案是：没有专注于做能力范围之内的事。
我是从大二（2014）开始做这款软件的，到最终做成想要的样子用了5年（2019），
软件开发本身就是一件很难的事情，尤其是对于没有指导的初学者，跨平台软件开发、数据同步、复习算法、界面交互、软件测试、上架分发、维护，每一项有难度的东西，叠加起来就是难以逾越的大山了。
我反思这几年大部分时间花在了“试错”与“走弯路”上面——作为初学者，一些技术难题解决不了、技术选型不对头，最后只能一遍遍推倒重来。从Android到iOS、再到macOS、再到Web前端、Django，切换了好几个技术栈。
最终能做出的契机在于研二认识到了构建“知识体系”的重要性，进而一股脑看了十几本与开发有关的书籍，了解了很多“认知范围之外”的知识。在具备知识体系后，一些曾经困扰的难题迎刃而解，自此重新开始搞便顺风顺水，基本功能实现不到两个月，剩下的则是一些“自找发烦”的功能的丰富活动。
后来我反思，其实这款软件并非依赖什么“黑科技”，绝大部分技术对于行内人士是成熟（或浅显）的；然而，这些技能对于初学者却是难以具备的，因为初学者缺乏相应的知识体系，并且由于“解决方案”在认知范围之外，因此也无法知道如何通过学习去具备相应的能力。
如今看来，其实当年更明智的策略是：
1.咨询有能力搞定这件事儿的人，请他们指导、规划，从而让这件事情变得可控。哪怕花一笔学费，相较于自己去试错是更合算的。
2.专注于能力范围内的事，如果某事不在能力范围内，那么就要有耐心、等到能力具备后再做。</description>
    </item>
    
    <item>
      <title>AnyaMemo：开源的Mac端文档复习工具</title>
      <link>https://www.huacishu.com/blog/2022/08/21/anya_memo/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/08/21/anya_memo/</guid>
      <description>AnyaMemo是什么？ 一款用于复习文档的软件，特点是能够为文档生成”稳定的链接“，即使文档改名或移动位置，依旧能够实现对文档的追踪。
并且，在总结了之前的些许经验教训后，我希望能做一些简单且“生命力长一点”的东西，因此AnyaMemo是去中心化（单机版的别称）、免费且开源的下载地址（仅支持Mac） ：https://github.com/my-yy/AnyaMemo/releases/tag/first-release
Intel Mac 选“AnyaMemo-1.0.0.Intel.dmg”
M1 Mac选“AnyaMemo-1.0.0-AppleSilicon.dmg”
由于我没有对这个软件进行签名，因此在第一次打开时会提示”无法确认开发者身份“，打开软件方法可参考此处
功能演示
1.将任意文件拖拽到AnyaMemo，即可将其纳入复习计划（软件没有存储文件内容，只是记录了指向该文件的链接）：
2.在”复习“页面，点击文件名即可打开该文件。
简要的教程 这个软件源自于我平时对几百篇论文笔记”混个眼熟“的需要，可以用来复习word文档、PDF、以及任何文件~
复习间隔 因为只是混个眼熟，所以在复习流程上做了简化：只支持按”固定间隔“的方式进行复习，在复习页面点击文件即可打开（名字划掉即代表已经完成了复习）。
软件存在一个全局默认的复习间隔，拖拽文件到软件时会默认以该间隔安排复习计划。
此外，也可以为文件夹设置单独的复习间隔，那么在该文件夹下创建的复习条目则会以该间隔安排复习。
（注意：这些间隔仅在创建新记录时作为参考，修改全局默认间隔（或文件夹复习间隔）并不会改变已有条目的复习计划）
数据管理与备份
数据存储在这个目录下：/Users/用户名/Library/Application Support/AnyaMemo/sync/db/ （右键点击“小房子”路径图标可直接打开这个文件夹）
每个.json文件即代表了一项文件记录，也可以直接在Finder中对这些文件改名，或者创建文件夹来进行组织。此外，如果你了解json语法格式 也可以自己修改.json文件的内容（字段定义详见Github）。
注意：软件不会监控这些文件变动，所以你需要手动在软件中点&amp;rdquo;刷新&amp;rdquo;按钮来刷新界面显示。
填入链接
除了文件外，你还可以插入其它链接（如DEVONThink）。 需要注意的是，如果填写的是文件路径，需要在路径前补充file://，例如：file:///Users/my/Desktop/DANN.docx，否则路径是无效的（软件无法为 手动填写的文件路径 生成“稳定的链接”，因此推荐通过拖拽录入文件）。 后续开发计划 目前忙于学业并没有多少精力在开发上，所以在明确了自己的能力范围后，我决定做一些简单（简陋）的小玩意儿。 我愈发体会到好用的东西其实都是“量身定做”的，因此也不再想追求什么极致了(:з」∠) 因此这个软件短期内不会有更新，未来也不会有大的功能变动。</description>
    </item>
    
    <item>
      <title>读博之路</title>
      <link>https://www.huacishu.com/blog/2022/07/21/ridiculous/</link>
      <pubDate>Thu, 21 Jul 2022 03:10:52 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/07/21/ridiculous/</guid>
      <description>我本身并没有对学术的向往，也没有能毕业的把握，选择读博不过是硕士毕业后觉得在 国家外汇局 当废物并非人生追求。
在人大读硕士期间，我曾负责搞一个叫做“语音向量”（Speech Embedding）的新领域研究，做了一年多的实验探索，投入很多精力却毫无收获。
当时我被灌输思想是“做不出实验的原因是你努力不够、缺少沟通交流”，这让我有些愧疚感，加上去别地方做研究意味着硕士期间的努力付之东流，我不想半途而废，因此在决定读博依旧选择回到人大。
不过有趣的是，政审时人大负责招生的老师曾因为我向外汇局维权的事考虑挂掉我，但是在导师的压力下保住了（对此我十分感激）。我倒觉得若因为这件事拒绝我并非坏事，一来我一向以理服人、并不会记恨学校，只是会给外汇的账上再记下一笔。二是，或许我能够有幸选择一个更为专业的地方，从而让读博之路顺利一些。当然，最后还是顺利入学了。
我记得刚刚博士入学时，我决心端正态度，为此放弃了软件开发这个我真正爱好的东西，全身心投入到上面去。因为我并没有能顺利毕业的把握，一方面我对学术毫无向往、对所研究内容毫无兴趣，另一方面人大本专业博士按时毕业率仅20%（这是我在开学典礼上才得知的）。所以这是破釜沉舟、背水一战，必须全力以赴。我也一切都想好了，如果毕不了业，那也没什么可留恋的，我会回外汇局把仇一块儿报了吧。
整体而言，我觉得读博是一个刷新既定认知的过程，就好似当年去复读班，静下心来再回顾，渐渐从一些早已熟悉的东西中产生另一番认识。在这个过程中，我渐渐发觉，其实在做研究这件事上自己还并未入门，缺乏专业性。
这个结论是慢慢形成的，最初是博一之初，我向师弟熊楚原请教如何做研究。楚原是VFMR文章的作者，最初看到这篇文章时我十分震撼。虽然这篇论文最后没有中，里面的一些结论也些问题。但这是受制于客观条件的，在落后的资源环境下他能依靠个人努力搞出那些结果已经相当了不起了，换做我是办不到的。我从他那里了解到了复现他人工作的重要性。我总结为：很多论文作者其实与骗子无二（生活所迫我可以理解），结果并不可信。此外，结论的成立都是有所谓的前提的，并非放之四海而皆准。因此，论文只是相对真理，要相信自己复现的东西，如果被论文中的错误观点所支配，则会走上歧路。
其次是我博士期间的好友Jobs，我和他提及硕士时间的研究经历，他敏锐指出我的研究套路是不对头的。做研究绝对不是上来就做实验，而是应该先大量阅读该领域与相关领域文章，寻找靠谱且易于实现的想法。 一上来就做实验，今天模型改改这儿，明天又改改那儿，人生就是这样被浪费掉了。我很感谢他的启发，否则我现在已经退学了。
最后是源于我的一系列经历与反思：我发现自己的努力是毫无用处的。博一那会儿，我先做了三个月“语音向量”的研究，但毫无收获。之后被派去做“音脸关系”（Voice-Face Association Learning）的研究，又做了将近半年。在这些研究过程中，我加强了交流汇报，针对硬件设备不足的问题还自费购买了实验设备（我很感谢导师在偶然得知此事后给我报销了），心无旁骛地做实验，结果却依旧一无所获。
表面原因是研究内容对设备性能要求太高了，实验出结果太慢——虽然我将电脑堆到了 AMD 3900XT + RXT3090 + 64GB RAM + 2TB SSD + 4TB HDD 的配置，但是对于跑实验而言依旧捉襟见肘。在最初研究视频任务时，为上百GB的视频数据集生成光流图片，光流抽取用了一周多时间，而生成的光流图片则达到了1TB。由于这些光流图都是一系列小文件，做实验时放在机械硬盘上会遇到IO瓶颈，显卡利用不起来，需要落到SSD上&amp;hellip;如今想起那段时间简直噩梦一样。
深层因素则是对于专业的无知。一是，从我现在的视角来看，用一张3090显卡去做大规模视频任务是十分荒诞的行为。二是在做了半年多后，我偶然发现自己的研究领域（音脸关系）属于“跨模态”的分支。契机源于我看到研究领域里一篇新出的文章所用的方法十分高明，深入研究发现这个方法本是跨模态领域中的经典思路，而论文作者也出身于搞跨模态研究的实验室。所以我对于他们虽然做的稍晚，但却能不断在这个领域中快速发文章一事毫不意外，因为那是有在相关领域深耕十余年的功底。
在博一即将结束时，我觉得再这么下去迟早要完。于是我不再关注什么交流、汇报，对“试试这儿、改改那儿”的建议理性看待。我认为这件事必须转变策略，于是乎我转头先看了一个月相关领域的文献，积累了几个容易出结果的实验想法，然后一个个去实验验证，一个想法最多搞2周，做不出来就换下个想法，绝对不在一个想法上死磕。
事实证明这条新路是对的，之前做实验两年毫无进展，而在有了正确的路线后不到一个月就找到了可行的方案。之后我写了第一篇文章投CVPR，不过因为缺少专业储备，论文中存在两个常识性错误，没有从审稿人那儿过关。但是，路子是大差不差了，在又看论文积累了几个月后，我完成了第二篇投稿。从开始实验到完成论文不到两个月，这次降低了投稿目标，有幸中了。从此之后，我对研究也有了一些信心，或许之后就是投入时间的事了。
如今回看，我对于博士已经过去的这两年是有些失望的。因为本以为是自己努力不够导致无法出成果，后来却发现其实大方向本是错的。我曾认为指导是专业且正确的，但是后来却发现其实本质上就是自己在瞎摸索，因为这件事根本不在指导者的能力范围内（我常常为一些无知的尝试感到后怕）。虽然目前取得了一点儿进展，但这并非源于厚积薄发，只是找到了正确的方法。倘若当初硕士期间能懂得些许道理，那我完全能搞得出来。但现实却是，硕士与博一在研究上的努力不过是在走弯路、做无用功。感叹我并没有那么幸运，被正确的方法所选择。
我比喻硕博的经历是：一个初学者被赋予使命去击败BOSS级的怪物，然而，却拿着落后的工具与错误的新手指引。所幸在足够长的时间维度下，经过不断行进、误打误撞，慢慢摸索到一条些许正确的路。
我不认为教育本应该是如此的。
感悟 1.一定要跟随”靠谱“的指导者
”靠谱“反应在三个方面：
1）能为研究提供足够的资源支持
2）对所研究内容有深入理解，或者有相关背景经验，能够指明正确的探索方向。
这样作为初学者能少走很多的弯路。因为很多问题的解决方案在个人的认知范围之外，如果没有一个过来人去点醒你，那么解决问题就只能靠偶然、靠运气。我见过身边很多人（包括我自己），一上来就走上一条弯路，到毕业也未能走出。
3）对未知的东西心存敬畏，在研究没有成果时能够正确归因。
努力有效的前提在于方向的正确性，在于目标的可达性。努力并非是决定性因素，一流的成果来自于“一流的资源” +“一流的想法” + “一流的投入”，否则就只能靠所谓“一流的运气”。
2.从主流领域开始积累经验，谨慎选择新领域
作为一个初学者，选择从主流领域入手能够有丰富的资源作为学习参考，能够积累到对常见问题的通用性解法，便于快速积累能力。如果一上来就从少有人研究的新领域入手做研究，在没有充分指导的情况下，由于可参考的前人工作太少，无法积累能力，并且难免思想闭塞，也无法形成有效思路。
3.做能力范围之内的研究；对于在能力范围之外的研究，尽力而为即可，不要有愧疚感
问题是与能力相匹配的。如果一个问题与个人能力范围相契合，那么它本质上就是可解决的，只要付出时间精力、加强沟通即可。
但是，如果一个问题是超出能力范围的，那么最终解决与否就要被运气所左右。运气可能在努力一个月之后出现，也可能在努力十年后出现，或者在短暂的一生中根本不会出现。如果是后者，那么努力便毫无意义，人生也就这样被浪费掉了。</description>
    </item>
    
    <item>
      <title>音脸关系学习论文解读：Self-Lifting</title>
      <link>https://www.huacishu.com/blog/2022/07/03/self_lifting/</link>
      <pubDate>Sun, 03 Jul 2022 20:39:57 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/07/03/self_lifting/</guid>
      <description>介绍我发表在ICMR2022的文章：Self-Lifting: A Novel Framework for Unsupervised Voice-Face Association Learning 只是浅谈一下思路，细节有兴趣可以参看论文论文：http://cdn.huacishu.com/Self-Lifting_ICMR2022.pdf
代码：https://github.com/my-yy/sl_icmr2022
我认为这篇论文的价值在于 1.给出了针对问题的两种解决思路
2.基于一致的架构与测试流程与以往工作进行了对比 在研究这个领域的过程中，我注意到很多工作使用的数据集预处理方式、测试标准不统一，并且backbone结构也存在差异，导致不同文章之间的分数不可比。在这篇论文中，我将一些（我有能力复现的）工作基于统一的Backbone进行了测试，且每个模型以不同的随机数种子初始化跑了5遍以降低随机性影响。
3.代码开源，并且是该领域为数不多所开源代码能跑到论文标注分数的工作。这个是让我自豪的事。下面我从研究领域——”音脸关系学习“出发来谈：
研究领域 声音与人脸之间是存在潜在联系的，比如，我们可以在打电话的时候推测对方的大致样貌，即便并没有见过对方。这是因为声音与人脸之间共享了一些属性，比如性别、年龄、体型&amp;hellip;。 而“音脸学习”即是通过算法（模型）来探究声音与人脸之间的这种联系，并通过三类具体的任务来量化：
1）音脸验证（Verification）：判断声音与人脸是否对应同一人。
2）音脸匹配（Matching）：根据声音找出匹配的人脸（或反过来）。
3）音脸检索（Retrieval）：根据声音检索出对应的人脸（或反过来）。
问题定义 视频数据中天然蕴含声音与人脸之间的对应关系，看似是丰富易得的训练语料。但是以往的研究在处理音脸关系任务时通常采用了有监督方案，模型在训练需要数据集包中含人员标签，无法对无标签数据进行利用。为此，研究目标是如何实现在音脸关系学习时不使用真实标签，即无监督的音脸关系学习。
问题分析 首先分析为什么以往的研究中需要标签。 以往的研究通常基于度量学习的解决方案，声音与人脸编码为向量表示，随后通过度量学习函数使得向量表示之间可度量：
而度量学习损失函数需要标签作为指导信息。例如：ID分类器作为一种隐式的度量学习函数，需要人员标签来作为分类目标；而Triplet loss此类显式的度量学习函数，同样需要标签来构建可信的负样本。
解决思路 在分析之后就有了无监督的解决思路： 1.仅利用正样本对进行训练 2.基于伪标签进行训练
思路1：仅利用正样本对进行学习  Correspondence Autoencoder (CAE) CAE是一个经典的无监督学习框架，它最初用以解决图片-文本之间的检索任务，可以直接套用到音脸关系学习。 具体地，模型结构由两个AutoEncoder构成，要求由人脸生成对应的声音，同时由声音作为输入要生成对应的人脸：   可见在训练过程中只需要对应用同一个人的声音与人脸样本，无需负样本对，因此可构成解决方案。
2.效仿 “对比学习”（Contrastive Learning） 对比学习与音脸关系学习是很相似的，在对比学习中，同一张图片进行数据增强的版本构成正样本对，音脸关系学习中来自同一个视频片段的声音与人脸恰好也是正样本对。 因此，对比学习中不使用负样本的方法（如BYOL 与Barlow Twins），可以直接用在音脸关系学习:
为了简单起见，我在论文中直接使用了Barlow Twins 损失函数，这是第二个解决方案。
思路2：基于伪标签进行训练 即：对样本进行聚类，然后根据聚类结果生成伪标签，利用伪标签进行学习。 这个方法的优点在于，得到伪标签后相当于标签是已知的，因此可以直接利用现有的度量学习损失函数进行训练。 ”聚类-训练“ 这个想法是从DeepCluster这篇文章来的，为此我在论文中也引入了DeepCluster作为baseline: 而论文标题中的Self-Lifting框架也是“聚类-训练”的路子，与DeepCluster原理上是一致的，主要不同点在于：
1）使用了更强的度量学习函数（跨模态版本的Multi-Similaity Loss） 2）使用了更好的聚类策略 3）当然，最重要的，一个古怪且高深的名字论文的不足之处 这篇论文里我使用从专家模型中抽取出的特征进行训练，而并非直接利用声音或图片来Train from scratch。 输入数据已经是包含了语义信息的，这会导致初始聚类结果比较准确。 因此，完善做法是直接用原始输入来训练，或者补充对比一下基于原始输入作为训练的结果。 关于这一点我和审稿人意见一致， 而我没有基于原始输入的数据进行训练的原因是因为耗时太长， 我只有一张显卡，而任务所处理的数据量是上百GB，不在我能力范围之内。</description>
    </item>
    
    <item>
      <title>如何应对必然的遗忘</title>
      <link>https://www.huacishu.com/blog/2022/06/25/half-of-the-puzzle/</link>
      <pubDate>Sat, 25 Jun 2022 22:54:52 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/06/25/half-of-the-puzzle/</guid>
      <description>前言
这篇文章源于我摸索多年后偶得的经验，回想如果在十年前就明白其中的些许道理，必定会做出很多不一样的选择。 可惜当初并没有人教我。
正文 在践行了很多年遗忘复习方法后，我得出了一个众所周知的结论：“从长期来看，遗忘是必然的”。 周期性的复习只能让你安然度过考试前的那段时光，但是考试结束后的漫长岁月呢？
假定遗忘是不可避免的，那么就要降知识被遗忘后再重新记忆的成本。在考试阶段，依靠周期性复习可以达到这个效果的，毕竟忘一半总比全忘了要省功夫。不过代价也是有的，你需要在复习上去投入时间。对于长期来看，我们想要实现的是在中间阶段不需要复习的介入。
那么如何实现在忘掉后能够快速的回忆起来？我认为，这其中的诀窍是：整理。 我主要从两个方面来谈：1.做笔记；2.构建知识体系。
1.做笔记 先让我们聚焦于所学习的具体内容，书籍作者出于全面性与严谨性往往会以一种晦涩的语言来描述内容， 如果你费了很大劲才搞懂，那么一定要用自己的语言重新理梳理一遍并且整理为笔记内容。
最显而易见的是，这会对内容会有更深的理解（这个说法的高情商版本叫”费曼技巧“）， 但是更重要的是，这份笔记将会在未来某个时间点，作为你重新学习这个知识的切入点。
如果内容本身就很浅显，自然笔记的用处是不大的。但是对于困难的内容，如果没有笔记，那么这次学习就会变成了走过场，并不会降低再次学习的成本；记笔记的目标就是在具有难度的知识上面创建一个“容易理解的层”，通过让知识拥有更好的表现形式，使得知识更直观、更容易理解。
比如，以0、1表示的机器语言难以理解，但是以它为基础所抽象出的汇编语言就容易一点，而在此之上高级语言就显得通俗易懂。笔记应该作为一种构建于视频和书籍之上的，更容易理解和查询的层： 从这一角度能看出，笔记、课本、视频讲解是互补的关系，而非用某一个去代替另一个。 因此： 1）事无巨细都往笔记中记录往往存在问题 2）毕业扔书不是个好习惯 2.构建易于查询的知识体系 如果不进行刻意的知识整理，它们就会散布于不同的笔记软件、网盘、某个快被遗忘的移动硬盘里，这些知识就仿佛置身于一个个信息孤岛，无法在需要时被快速查阅。这时候就凸显了构建“统一的知识体系”的重要性，有了知识体系，在查询时就可以通过“目录”来进行遍历。
我的解决方案（仅供参考） 我在2020年准备博士入学考试的那段时间，反思自己之前做笔记的初衷都是为了便于周期性复习来应对考试，而并非是作为在完全遗忘后进行回顾东西，没有进行刻意整理过，以往的笔记散布在各处，难以查阅。在发现了这一问题后，我研究如何用构建知识体系，目前的方案是：
 使用系统自带的文件夹进行知识管理
 我创建了一个叫做“ONE”的文件夹，然后将我总结的笔记内容分门别类至于其中。
 小技巧：给文件名附加编号，使得秩序井然
 出发点在于：知识管理工具需要有足够的“包容性”，因为我的知识内容并不限于文字内容，还包括讲解视频、PPT、OmniGraffle（一种绘图格式）以及一些不太常见的文件格式。这些文件通常在一些笔记软件中是不被支持的，此外最终的文档总量近200GB，一般的管理工具无法承担这个体量，所以就选用了这个比较简单粗暴的方法。或许并不值得借鉴，但是可以开阔一下思路。
总结用文件夹进行知识管理的优点在于：
1）支持多级嵌套以实现目录
2）支持各类的文件格式（Word文档、PDF、视频、OmniGraffle&amp;hellip;）
3）知识体系汇集于一个目录，借助第三方软件可实现云端同步，充分保障数据安全
在使用文件夹结构进行知识管理后，自然就需要选用基于文件的笔记工具 （不然就会形成我前面所讲的信息孤岛）。 这方面选择并不多，由于日常对图文混排、字体颜色、表格这类功能需求比较多，所以主力笔记工具是Word文档。 部分笔记也会以MarkDown、PPT进行记录，毕竟每种格式都有它更擅长记录的内容：
1）Word：图文混排、易于编辑
2）PPT：灵活控制内容的位置
3）Latex：排版严谨的学术文档
4）MarkDown：“低格式”内容
5）纯文本：没有格式困扰
缺陷 用目录管理的显著缺点在于检索，但这并非是无法解决的问题，只是解决方案并非”开箱即用“，毕竟，对文档内容的扫描、索引都是成熟的技术。
我的方法是用Alfred进行文件名检索（需要在软件中配置搜索范围，只索引ONE文件夹），配合Splotlight进行文件内容检索。
Alfred基于文件名检索能提供印象深刻的查询速度与精度（令我想起了Windows下的Everything），不过有时会出bug导致结果不全，这个时候我会用Splotlight基于文件内容检索。
以上两个工具相配合能满足我的基本需求，因此我没有再探求其他更好的解决方案。
总结 在重视“整理”后，复习的重要性也就被削弱了，因为：
1）如果内容”再学习“的成本被降低，那么遗忘就不再可怕
2）如果内容能够被快速检索与查阅，那么全程记在脑子里就不重要了，需要时再查出来就好</description>
    </item>
    
    <item>
      <title>我的猫猫(1)</title>
      <link>https://www.huacishu.com/blog/2022/06/25/2526/</link>
      <pubDate>Sat, 25 Jun 2022 18:54:00 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2022/06/25/2526/</guid>
      <description>回忆短暂的一生中那段最开心的日子
 猫猫长得很像王冰冰，不过王冰冰没有她可爱。
早年在王还并不被人熟知时，
我曾向猫猫建议出道去当UP主，
并许诺将自己的硬币全部都投给她！
 我和猫猫认识是在2018年10月24日下午2点46分，在移民管理局的宣讲会上：
我去的时候看到我前排左侧有个女生，背影我喜欢的类型。
戏剧性的地方开始于，
开讲前她向后瞅了瞅，然后主动坐到了我旁边，
所以从那时我就知道她一定喜欢我(●°u°●) 」
（不过后来她告诉我那只是凑巧）
宣讲会期间她时不时和我吐槽找工作遇到的烦心事，
吐槽即便去英国留了两年学找工作也不太容易，
吐槽近期总有人打电话问她要不要买房&amp;hellip;
我则边微笑倾听、边认真记录宣讲重点。
（我当时对宣讲内容毫无兴趣，只是想展示我是个 认真上进且友好 的人）。
宣讲结束后她说自己回国时间还不够，所以没有办法申请&amp;hellip;
随后，又接了一个向她卖房的电话。
我觉得不能让她溜走，于是鼓起勇气和她要了微信，
显然，她并没有拒绝我。
 我注意到她的微信上写了一句很中二的话“这个世界需要一个真正的英雄，那就是我！”。
 在获得阶段性进步后就要进一步试探&amp;hellip;
试探成功，晚上我陪她去农业大学参加了伊利集团的宣讲会：
在农大外面的小店里，我请她吃了一个手抓饼。
她在宣讲会上回馈了我一颗糖，
饶有兴致地和我说她喜欢玩的游戏，
而我从她那里第一次知道了“黎明杀鸡”这个词，并摆了一个被咔嚓掉的动作。
最后走的时候，她嘱咐我要穿秋裤，
然后说出了从某个游戏中学来的那句话：&amp;rdquo;这个世界上需要一个真正的英雄，那就是我&amp;rdquo;。（这里的“我”指她）
我觉得她是彩虹一样的人。
这一天的核心收获是，我推测出她并没有男朋友。
(未完待续)</description>
    </item>
    
    <item>
      <title>重头再来</title>
      <link>https://www.huacishu.com/blog/2021/03/21/restart2021/</link>
      <pubDate>Sun, 21 Mar 2021 01:14:59 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2021/03/21/restart2021/</guid>
      <description>我想了想，也许这辈子最开心的时候就是和猫猫在一起的时候 (●ﾟωﾟ●)
其余的已经兴趣不大了，
也不重要了。
我得再拿到成为英雄的机会，
把猫猫找回来，
找外汇局的骗子们报仇，
就酱。</description>
    </item>
    
    <item>
      <title>拾忆笔记的前世今生</title>
      <link>https://www.huacishu.com/blog/2019/06/18/mortal/</link>
      <pubDate>Tue, 18 Jun 2019 10:42:29 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2019/06/18/mortal/</guid>
      <description>为什么要做这款软件呢？
这还要追溯到2008年，那时我面临中考，因为记忆力不好而深深苦恼，
突然有一天，我想到可以利用数学书上提到的“遗忘曲线”来复习每天所学知识，
从而开始尝试将笔记标记页码，按照1、3、7、15、30的周期进行复习，
这个不经意的做法为身处黑暗的我点亮了一盏明灯。
当时的我体验到了知识点充盈于心中的快感，体验到了什么叫做“一个知识点全班只有你一个人记得”、“一个知识点老师自己都忘了，你竟然还记得。”
09年步入高中，我接触到了记忆软件鼻祖Supermemo，并尝试用它来记忆笔记与试题，
可是它的算法并不适合，严重制约了学习效率。
从此我想能否有一款软件，用于笔记与试题的记忆。
显然，我一直没有找到。
2012年 高考失败。
2013年 高考复读，进入了河北省的一所211院校
虽心比天高，奈何实力不济，名校梦也许已不在，但当年的想法却一直萦绕我心。
2014年9月，土木工程专业的我开始自学Android开发，
2015年12月，一年多时间，我投入了上千小时，突破无数障碍，做出了第一款拾忆笔记。
但真正想做成一件事情并非那么容易，
当时的我初出茅庐，技术不高、对理论认识也不够深入，软件失败了，一年努力付之东流。
不过，自学编程的经历也提升了我的自学能力，使得我在大三寒假自学完了5门专业课。
2016年，面对工作与考研，我陷入两难抉择，
离考研初试只剩三个月时，我看到了中国人民大学，
我想起了自己当年的名校梦，
大学期间的自学经历又让使我底气徒增，
本着一年考不上两年，两年考不上三年的决心，我报考了中国人民大学。
所谓“工欲善其事，必先利其器”，
我总结了之前做拾忆笔记的失败经验，重头构建了拾忆笔记电脑版，
三个月时间里，我依靠这款软件，顶着土木工程7门专业课的压力，
又自学完初试所学的两门专业课，一战成功考入中国人民大学软件工程。
我感觉，电脑版本还不够完美，因此在读研期间，我又相继开发了拾忆笔记iOS版本、网页版本。
做一款软件很容易，可但想做全平台，却异常艰难，
因为技术路线偏差，各个平台难以维系，最终软件各个半死不活，还是失败了。
2019年2月的某个深夜，我陷入沉思，
这么多年，做了那么多版本，都失败了，是坚持还是放弃？
可萦绕多年的想法，又怎能轻易放弃？
经过一次次审视，我相信，之前的那些失败已让我有了足够的技术积累，
读研期间对人工智能方向的专业研究也让我对算法理论有了新的认识，
所谓，只不过是重头再来，
2019年3月，我开始第五次尝试，构建了全新拾忆笔记，也就是你现在看到的版本~</description>
    </item>
    
    <item>
      <title> 拾忆笔记Cloud</title>
      <link>https://www.huacishu.com/blog/2018/08/01/kycloud/</link>
      <pubDate>Wed, 01 Aug 2018 13:02:11 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2018/08/01/kycloud/</guid>
      <description>以下内容仅供存档，所述内容已不具时效性;拾忆笔记最新版本可前往 www.shiyibiji.com 下载
拾忆笔记Cloud，从6月初就一直在改bug&amp;hellip;
不知不觉到了8月1号要计划发布的日子 放出公测版吧~ bug嘛，肯定有的Orz&amp;hellip; （另外如果你发现APP页面是空白的，请不要惊讶，那是服务器挂了&amp;hellip;😳，你的手机质量好好的）
我准备慢慢填坑&amp;hellip;.
这阵子实在太忙,感觉自己要炸&amp;hellip;. 一直在实习&amp;hellip;，并经常在想问题想到头疼的阶段接到面试电话😳 然后就是一阵迷茫🙄
总之， 愿各位每天都离梦想能更进一步 加油！
 下载地址：
Android版本(1.1): 点击此处下载
iOS版本：AppStore中搜索“拾忆笔记”下载\更新即可。应用安装后转到“设置”页面，点击“切换到拾忆笔记Cloud”
注意：拾忆笔记Cloud是云端版本，使用时需要有网络&amp;hellip;.</description>
    </item>
    
    <item>
      <title> 拾忆笔记Cloud 开发计划 </title>
      <link>https://www.huacishu.com/blog/2018/05/18/sybjcloud/</link>
      <pubDate>Fri, 18 May 2018 17:16:53 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2018/05/18/sybjcloud/</guid>
      <description>以下内容仅供存档，所述内容已不具时效性
目前这段时间一直在做新的拾忆笔记Android版，回想从2014年到现在，这些年，我将这个软件从Android做到桌面平台，又进一步做到iOS&amp;hellip;.
没有多少欣喜，最大体会就是对版本控制力的缺乏——更新过于艰难，好似“做一个，死一个”&amp;hellip;.
原因是显而易见的——软件过于复杂。 而复杂是因为它涉及两点：计算与存储。这两点带来一系列问题，而这些问题在每个平台上都要解决一次。
反思许久后，在两个多月前，决定使用新技术，向云端版本转变。如此，带来的优点有三个：
1）计算、存储造成的难度被转嫁到服务器端，客户端设计难度大大降低 2）在所有平台间实现数据同步 3）代码统一，能够将精力专注于引入新功能与新算法 这个版本就暂且叫做“拾忆笔记Cloud ”吧（www.sybj.cloud 这个域名目前已拿下）
才记得开学不久，突然就到了校招的日子，银行、TAB、要开始一波波面试了，所以估计具体实现依旧漫长，预计计划：
8月1日：基于云端的 Android、iOS版本 9月1日：支持旧版本的数据迁移 11月1日：基于云端的桌面版</description>
    </item>
    
    <item>
      <title> 拾忆笔记iOS版本：纪念 “完美的80%” </title>
      <link>https://www.huacishu.com/blog/2018/02/25/kyios/</link>
      <pubDate>Sun, 25 Feb 2018 16:55:57 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2018/02/25/kyios/</guid>
      <description>以下内容仅供存档，所述内容已不具时效性
去年5月29日，我开始做iOS版本，因为感觉到可能在手机上进行复习是更容易的一种方式（现在感觉果真是如此~），当时想的很长远，比如 “要引入机器学习算法”、“要支持Android、iOS、Mac三个平台”、“最关键的界面要漂亮”&amp;hellip;但好像忽视了自己的能力问题，结果整个过程基本上是改了又改，不断(ﾉ･ω･)ﾉ推倒、又重来ヾ(･ε･｀)，
于是乎进展一直不大，最后索性搁置了起来，直到2017年的12月31号，想到明天就2018年了，而如今软件还没见到一个完整的样子，并且在试用中不断地发现其“先天性缺陷”：“同步功能表现的很诡异呀&amp;hellip;.、计算的时间间隔貌似不对&amp;hellip;、这个东西我删掉了咋又冒出来了( ⊙o⊙ )?”&amp;hellip;. 我开始感到不安，甚至怀疑一开始的路就走错了。
回想当年为应付考研做“拾忆笔记Lite”的时候，两三天整出个基本的架子，做出来就应用，并在应用中不断改良，真乃高效实用的典范。而如今呢，墨迹了大半年弄不出个半成品&amp;hellip;.. 感叹在自己专用与拿出手给他人用之间存在一条巨大的鸿沟呀，而产生这条鸿沟的原因是啥？——求“完美”的心态。
于是我决定，先“完美”的完成80%，扔掉20%，在当年的道路上一摸黑做下去，于是又经过了2个半月的折腾&amp;hellip;
2月18日，iPhone版，代号之“完美的80%”上线 AppStore，（当然也可以叫做 “糟糕透了的20%”）。
说说我扔掉了啥： 1）内容：只能显示印象笔记的内容，但是无法编辑，更甚的是显示功能也无法支持印象笔记中附带的音频、PDF文件什么的&amp;hellip; 2）算法：未能引入基于机器学习的算法，因为尚不成熟，我感觉我还需要几个月去实现。 3）同步：同步中我有两种方案，第一种能实现 iOS、Android 两个平台间的同步，但缺点是自己要设立服务器，如果服务器挂了东西就全没了。第二种的话只能实现iOS之间的同步，但用的是苹果的iCloud，（比自己搭服务器稳定），我选择了这个iCloud的方案。也因此，与Android之间进行同步的泡泡破灭了ㄟ( ▔, ▔ )ㄏ 其它的待补充&amp;hellip;..
明天又是开学的日子，周一~周五要去实习，周六日还得上课，加上喜欢的人再也找不到了，我好像渐渐丢失了当年的决心与勇气(￣.￣)&amp;hellip;</description>
    </item>
    
    <item>
      <title> 个人学习方法小结 </title>
      <link>https://www.huacishu.com/blog/2017/07/08/learning_flow/</link>
      <pubDate>Sat, 08 Jul 2017 14:59:17 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2017/07/08/learning_flow/</guid>
      <description>一直想把《三个月跨考中国人大》这篇文章背后的学习方法系统总结一下，也就是如何利用“周期性复习&amp;rdquo;来提升所谓的“保持力&amp;rdquo;（记忆留存率）。不过一是因为自己语言表述能力不咋样，二是因为没写东西的兴趣，从4月开始拖到7月，拖了3个月后总算，大体上算是写完了吧(ಥ_ಥ)。 这里所说的方法是我一点点摸索来的，从08年为自己记忆力不好而困扰决定“另辟蹊径”，将复习方法引入学习当中，在学习效率上实现了第一次比较大的提高；到后来认识到“周期性复习”中“定量”的重要性，从而顺利考研成功，前后已经8年有余啦。我感想如果当年即得此法，是否能减少自己的许多无奈呢？可是已没机会了。 希望这篇文章能给你点帮助，不过你可得仔细甄别，因为一是即便懂得这些方法后，我也不敢认为自己是所谓的“高手”，不是谦虚，实在是“人外有人，天外有天”。二是学习方法不会适用于所有人，因为每个人都有独特的一面吧。 总之，谨防被我带沟里去。 方法的原理 原理以一言以蔽之：将所学内容记住。 很简单的思想不是吗？若能将学习成果保留下来，凡接触则必有长进，凡学过则必多懂一些，不做无用之功，不就是提高学习效率的方法嘛。 那如何实现“将所学内容记住”？从对这两个问题的分析入手：
1.记忆什么？ ——笔记、导图、试题 2.如何实现长久记忆？ ——依靠周期性复习
你可能会有疑问：“笔记我有记录呀？”、“导图哪有那么神？”、 “错题本谁没有？” 可是多数人用的只是常规方法，不出意外的话，常规方法只能导致常规结果。所以你也猜到了，我在本文中要讲的是 “非常规方法”🙄。此外 “周期性复习” 五个字，却真的能化腐朽为神奇，也正是本文所述方法的核心。
本文围绕的方法有以下3个步骤：
1）学习新知识 2）利用“笔记、思维导图 、经典试题”来“提要钩玄”，抓住关键知识点，代表学习成果 3）依靠周期性复习，提高记忆留存率
1.第一步：学习新知识 这部分略去。因为单纯从理解新知识的速度而言，我并不比常人快，甚至可能还低于平均水准。我在这方面懂得的只是一些花哨的技巧 ，而非“扭局势”、“定乾坤”的方法。这篇文章本文本来就很长了，“技巧”性内容以后再写吧。
2.第二步：保留学习成果 2.1 混合笔记——固本之策 “混合笔记”是什么？混合笔记就是将每日所学、习题感悟、各类细枝末节记录在同一个笔记本上，并标明日期，日后参照该日期进行复习。“混合”一词表示的是不分科目、不设门类，各类笔记内容混杂在一起。
为什么要混合呢，这样查起来多不方便，是不是有违“常理”？ ——从“复习”的角度看，这一做法是合理的。因为该笔记不是为了方便日后查阅而写，而是为方便复习而写。
学习可以分为两个阶段——新学阶段、重学阶段。第一阶段（新学阶段）重点在于将知识点 “逐个击破”，第二阶段（重学阶段）注重“分门别类”，以构建整体认识。在开始学习新知识时，将笔记混合写是为更有效地去“逐个击破”，因为通过周期复习，记在“混合笔记”上的内容会在未来两个月内被周期性地回顾4~6遍，每一遍都是巩固与提高。若分门别类，记在不同位置，等哪天忘了才看，甚至忘记自己曾经在本子上记过，那就只是记在了本子上而已，提高又从何而来呢，这不正是“本末倒置”吗？因此，笔记要混合写，若照科目、章节分散写在不同位置，一是不利于复习巩固，二是因为注重整洁，导致无法被合理归类的“细枝末节”与影响美观条理的 “未成结论” 被丢弃了。
（标明日期）
为什么这个方法是有效的？ 我曾为学习中的“返工”现象而苦恼——“知识点学了忘、忘了学，反复很多次才能记住，效率极低”。究其原因，并不是学习的当时没有收获，而是当时的收获没有被保存下去。通过周期性复习，在“混合笔记”上所记录的内容都会获得“复习保障”，即便记得不太清楚，至少也留有印象，每次学习都是在提高与前进，而不是做无用之功。
我从08年开始使用这一方法，在学习上产生了第一次飞跃。我将所有科目记录在同一个笔记本上，涵盖老师讲过的知识点、错题分析、名言警句、日常感想 ￣ω￣= ，通过周期性复习，我感受到一种非凡的体验——“老师讲过的知识点，全班就你一个人记得。老师讲过的知识点，她自己都忘了，你依旧记得。”，也正是因为笔记上的内容大部分都记得，月考前甚至都不用复习（我称之为“自然而然地被检测”），高中前两年在班里稳占第一。
（高中时的一个笔记本）
 但是，到高三后应用此方法我已明显感受到“力不从心”，最终高考失败。为什么呢？因为这一方法拥有局限性——拘泥于细节、无法反应知识间的联系、无法形成知识对比，终归是“固本之策”，而非“提高之法”。 “混合笔记”更像是一次性用品（只适用于学习的第一阶段），因为知识点记录的毫无规律，难以查询，缺少分门别类，无法形成整体认识。高一、高二处于学习新知识的阶段，靠“混合笔记”获得的对“零散知识点”的记忆力足以让我体验到优势，而高三已是融会贯通阶段，对单个知识点的记忆已不是关键问题。“混合笔记”完成了第一阶段“各个击破”的任务，但于第二阶段的“融汇贯通”而言，无计可施矣！
 2.2 思维导图——提要钩玄之法 
“混合笔记”缺少整体认识，那如何形成整体认识？——思维导图。 我所谈的思维导图指 “知识结构图”，类似于市面参考书中的“概念图”，并不是指充满“艺术气息”的这种： （不是这种） （原作者不详）
 (与此种类似)
 你可能会想，这种毫无美感导图画起来不是“零门槛”？那是当然啦，并且用手画或用软件画均可。不过有要注意的细节，我在此以百度百科中“菠萝”词条为例： 通览全文后，可见句话极为重要：“通常菠萝的栽培品种分4类，即卡因类、皇后类、西班牙类和杂交种类。”
（重要知识点ಥ_ಥ）
 针对这一知识点，一般的思维导图是这样的：
（常见的思维导图）
虽然它清晰直观，能帮你理顺思绪，以及在“头脑风暴”时引拓宽思维，但它无法在你日后重看时引起足够的多思考。引起思考的导图应该是 “提问式”的思维导图，例如： 或：
（“提问式”的思维导图）
“提问一词”即是将“重要节点”要以“问题”的形式来呈现，以“问题”引发思考。</description>
    </item>
    
    <item>
      <title> 拾忆笔记Lite </title>
      <link>https://www.huacishu.com/blog/2017/04/29/kylite_swing/</link>
      <pubDate>Sat, 29 Apr 2017 13:06:03 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2017/04/29/kylite_swing/</guid>
      <description>简介 拾忆笔记Lite 是用以提高学习效率的软件。
下载地址：百度云
该软件需要Java运行环境支持，若无法启动软件( Windows下提示：No JVM Could be found&amp;hellip;.) _则应安装Java运行环境(JRE 1.8)：__点击此处下载 , 安装完毕后即可启动应用 (macOS下有几率在安装JRE后依旧无法打开，解决方案见此)_
视频教程 1. 软件安装 与 文件录入 
2.做过的题目就是记不住?—例题Kit 解决方案
3.试题电子化管理
文字帮助  详细帮助(文字版)
Q&amp;amp;A 拾忆笔记Lite为什么是有效的?
理论基础：《复习原理》；实战检验：《三个月跨考中国人大》
拾忆笔记Lite何时是有用的？该何时使用拾忆笔记？
拾忆笔记适用于“有一定时间跨度且具有难度的考试”（详见《复习原理》），有个简单而合理的判断标准——当你渴求它的时候（比如，为学习效率而烦恼），拾忆笔记是有用的，当你想不起要用它的时候（比如，某门考试很简单，考前看看就可以），拾忆笔记是有害的。
使用拾忆笔记要注意什么?
1)对于大体量材料（例如试题），复习一次很费时间，为了提高效率，复习内容不应求全面、复习效果应适当放宽。因为一些东西就是很难理解(･ェ･。)，看了很多次都记不住，试图解决这一问题所产生的困扰比问题本身更严重。复习是一种 “不可求其真，只可求其美”的过程，美即在于互相“宽容”。
2)依靠某种模式的人必须相信这种模式，遵从这种模式，并在适当的时候打破这种模式，当发现拾忆笔记不再适用的时候，抛弃它。
为何拾忆笔记Lite不含“遗忘测算”功能？
以效果而论，虽然拾忆笔记Lite不含遗忘测算，但因为基于正确的理念，效果优于之前基于遗忘测算的版本（拾忆笔记Android版），具体解释见《复习原理》。
此外是出于时间精力上的考虑，在考研之后我想过很长一段时间，是在当时已有软件（基于Java 跨平台技术）的基础上继续开发，还是专门做一款mac上的软件。前者的好处自然是“跨平台”，Windows、Mac全兼容，但问题是不会兼容的多好，很多基本功能无法实现，最终是一款平庸的软件；而后者有成熟的控件、较低的适配难度，可谓个人开发者的不二之选。但我还是选择了前者😊，因为我不想把门槛定的太高。结果也就是，技术上的局限性导致这款软件不适合应用过于复杂的逻辑，所以我没能将遗忘测算功能添加上去，为此取名拾忆笔记“Lite” 。
拾忆笔记Android版怎么办？
移动设备拥有无可比拟的便携性，这是我并未放弃Android平台的原因。从“拾忆笔记Lite”中略有启发，感到像以前自己做一款完整的“笔记软件”并非是很好的方案，为此我想寻求更好的解决方案，但个人时间与精力有限，可能会很漫长啦。
论坛talk.huacishu.com为何关闭了？
在3月末服务器再次崩溃后，我关闭了这个论坛，因为我意识到自己无力承担。里面有两个帖子让我很开心。
你需要Macbook吗?
拙匠总怪工具差，为一款软件而选择一个硬件平台通常是不理智的行为，尤其是为 “拾忆笔记”。
从“拾忆笔记Android” 到“拾忆Lite ” 我在“拾忆笔记Android版”上投入了巨大精力，但它并不成功😱。虽逻辑上合理，效果却不尽如人意，在大半年时间里，我思考去如何改进它，但都是无关乎痛痒的小修小补，这可以带来些许提升却不会有质的飞跃。所以我不得不反思，是不是一开始的理念就错了? 拾忆笔记基于的这一理念:
“测定记忆材料难度，以提供更有效率的复习周期”
若要测定难度，则必然会引入评分机制，根据评分进行预测。获得评分的途径可以像常见的 “显式”打分或基于复习所耗费时间的隐式形式，但无论哪种，都会掺入干扰项。干扰可能来自于其它记忆材料、来自于心理因素，来自于记忆目的。在评分数据有限的情况下，一个不精确的评分会显著干扰算法的预测结果，从而产生匪夷所思的现象，比如常见的 “震荡效应” (一个顽固的条目隔三差五蹦出来让你复习，如果你使用SuperMemo，这会经常遇到)。这些问题很复杂，为此只得引入更复杂的修正策略以减小影响，拾忆笔记Android版逻辑之复杂，我现在想起依旧心有余悸。
或许，上面所叙述问题能够解决，但有一项始终无法避免：记忆的劣化趋势——随着记忆周期的延长，记忆必定是愈来愈越模糊的，即便在该次复习时能够完整回忆，但下次不会比这次熟悉（如果期间没接触的话），因为算法是在探测记忆底线，若这次记得下次就会提供一个更长的复习间隔，直到忘记😱。若想减少这种“劣化” ，必须用更短的复习周期（或设定上限），导致的就是复习次数的增加，即与效率相违背。改善这一境况的办法之一是界定 “预期记忆效果” ，比如，若只求跟所记忆的东西求混个 “脸熟” (它认识你)，那么对 &amp;ldquo;劣化&amp;rdquo;的容忍度就会高一点，相应复习间隔就会长一些，在拾忆笔记Android版中曾引入这种逻辑，但终是缓解之术，而非治本之道，效果有限😤。
总之，这种理念引向了一个算法与逻辑上的无底洞，我希望摆脱它从而探索出一种新模式，而若要真正有所创新就必须重新开始，为此我在电脑上重新开始构建新拾忆笔记，这次我决定应用一种激进的新思想——固定间隔上的定量思想。这个方法简单明朗，相比之前那种将记忆材料始终保持在 “遗忘线” 之上的做法有效率多了（见《复习原理》）。根据这个方法，我构建了GREKit模块，从而成功把30多个单词无痛的带了起来，顺利应对研究生考试（然后我就把它扔掉了:）。事实上，我曾一度想过在 &amp;ldquo;定量思想&amp;rdquo; 上把 “评分机制”给搬回来，给单词中的一些“顽固分子”以致命一击，但最终我发现还是和平共处比较好，毕竟见多了心烦。</description>
    </item>
    
    <item>
      <title> 对复习的一些思考 </title>
      <link>https://www.huacishu.com/blog/2017/04/24/fun_of_rl/</link>
      <pubDate>Mon, 24 Apr 2017 12:14:45 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2017/04/24/fun_of_rl/</guid>
      <description>以下内容仅供存档，所述内容可能已经不具时效性
本文写的是述拾忆笔记软件所依循的原理，解释了为何不含遗忘测算功能的“定间隔算法”为何效率更高。
结论 1.四种常见的学习模式：
1）平时不学习，考前疯狂学习 2）平时学习但不复习，考试前总复习 3）平时学习并通过多次复习将所记忆内容始终保持在遗忘限度之上（利用SuperMemo等软件），考前不复习或少量复习。 4）平时学习且进行复习，允许对部分记忆内容的熟悉度降低到遗忘线之下，考前适当复习，快速拾起。
1、2适合难度较低的考试（如大学期末考试），我在这篇文章《我是如何40天自学完5门课程的》 采取的第2种方式，在开学前搞定了该学期的课程，上课时便很少去过，期末考试重看所做的笔记、思维导图，将知识点拾起来，通过考试。但在考试前将所学知识拾起来是耗费了一定精力的，因为中间不曾主动复习过，知识架构已变得生疏，有的知识点更是毫无印象，必须重学一遍，并且掌握也不深入。 学习（应试）分两个阶段：新学、重学。第2种方式只是停留在新学阶段，缺少重学阶段的融会贯通，但毕竟之前学过一次，顺利通过考试，分数不高而已。
3、4适合具有难度的考试，难度体现在 “试题难度高”、“备考时间有限”。容易理解，使用1、2种方法应对此类考试，若非天赋过人则是对考试失败已持有淡然之心。而在3、4之间，4的效率更高，因为3是在追求“全程记忆”（从学习到考试的全过程中将记忆材料保持在遗忘限度之上）而4则充分发挥了考前复习的力量。试题、笔记属于“大体量记忆材料”，此类材料之间存在干扰现象，使得遗忘预测结果并不精确。即使理条件想化，遗忘预测算法精确而合理，针对一些具有难度的记忆材料，依旧要耗费很大精力才能被最终记忆。这就好比“吃8个馒头才饱是客观规律”，不会因吃的有节奏而改变。但考试中往往不需要对记忆材料保持此种高度的熟悉程度（全程记忆）。在考试中（“中考”、“高考”、“研究生考试”等旨在测定对所学理论“理解与应用能力”的考试，而非纯粹的记忆性考试，如“成语比赛”、“知识竞赛”），一个知识点考试前掌握跟几个月来一直被掌握，结果可能是相同的，甚至与考前未掌握相同（因为知识点繁多，并非所有知识点都会被考察），此外备考时间精力有限，也容不得去修炼“一网打尽”的功夫，与其将记忆材料保持在遗忘线之上，不如降低要求，将节省下来的时间拿去搞“题沟战术”。
何时记得不是记得，何时学会不是学会？在复习时发现已经忘记并不可怕，通过这几次具有时间跨度的复习，你已经对所学内容有了一定的熟悉度，在考前你会以更高的速度将其拾起，并保持更长的时间。你需要的是在需要使用这些知识时，得到这些知识，即在最后关头（考前）将它们带起来，顺利通过考试。
2.拾忆笔记Lite的适用范围：
“拾忆笔记Lite”基于第4种思想，适用于“具有一定时间跨度且具有难度的考试”。 我在备考研究生时重度依赖拾忆笔记，构建了“ GREKit” 、“难句Kit”、“例题Kit”等模块，它们对我帮助巨大。一方面因为考研备考是长期行为，我需要去提升自己的“保持力”，让所学到的知识、方法、见解平安度过这个长期的过程，不至于到最后遗忘殆尽。而当备考的最后一周时，我不再使用拾忆笔记，因为此时已是短期记忆，拾忆笔记并不适用。 另一个例子是在考研初试后，我准备学校期末的《基础工程》考试。在不到一周的学习时间里，我依旧没有用拾忆笔记，因为这同样属于短期记忆任务，此外考试题型固定，每天做 “新题目” 就已经是对所学过知识点的一种复习，再用拾忆笔记可谓浪费时间，得不偿失。
所以，拾忆笔记Lite 是否对你有效，关键看你的目标：如果你被考研、公考、司考所含错综繁杂知识点整地焦头烂额，不妨试试拾忆笔记Lite；而如果你只是为了大学期末60分万岁那就不要用它，在面对这类问题时我自己都不用(ಥ_ಥ)。所谓依靠某种模式的人必须要相信这种模式，遵从这种模式，并在最后打破这种模式 ，针对不同问题，选择合适方法。 (两版拾忆笔记的对比)
无趣的定义 复习检验：
复习时对记忆效果进行评价。
大体量材料：
“单词”与“试题”是两类不同性质的记忆材料，分别归属为 “小体量材料”与 “大体量材料”。以下论述中的“复习”一词若非指明则均为针对大体量材料的复习。
复习过程的高成本：
相较于小体量材料，针对大体量材料的复习行为是极其耗费时间的（例如复习一个单词用时几秒，但将一道题目做一遍耗时几分钟），这定义为复习过程的“高成本”。
复习过程的非精确性：
小体量材料往往孤立（虽单词中不乏同义词、易混词，但比例较低），而大体量材料一般具有内在联系（例如同一个知识点被多道题目涉及），某记忆条目易受到其它记忆条目干扰，导致则该条目进行复习检验时的结果不可靠，所以针对大体量材料的复习行为的发生是随机的、复习检验结果是非精确的。
例如：题目A、B具有联系，且A 定于第5日进行复习检验，若在第4日学习B，且B涉及与A相同知识点，则A于第5日的检验结果失效（此时A将具有超常的熟悉度），“试题A” 的检验结果是不被信赖的，真正的复习过程发生在第4日。同理，若在第6日学习B，且因B涉及与A的易混知识点导致A发生 “遗忘”，则A于第5日的检验结果失效。
此外，复习过程的非精确性为复习过程的非长久性提供了解释（例如发生了“例题替换”，“例题A” 被新的 “例题B” 所替代，则“例题A” 复习过程被中断）。
复习过程的非持久性：
学习具有两个阶段：
1）新学——侧重对各孤立知识点的学习，明晰各孤立部分的内在的逻辑，缺少知识点之间的联系。
2）重学——重建知识点之间的联系。
第一阶段反应学习的“粒子性”，粒子性决定复习是必要的（为第二阶段的基础）； 第二阶段反应学习的“反复性”，反复性决定复习过程是复杂的、反复的、非持久的（例如复习计划经常变动、替换现象时常发生、复习效果难以预测）。
推论 1.小体量材料复习理念的破灭
复习的高成本、非持久、非精确性决定了小体量材料的复习理念—— “依靠复习检测预测复习日期，使记忆水平持续保持在遗忘限度之上” 不可取。复习的高成本与非持久性导致评分样本数量不足、复习的非精确性导致复习检测结果不可信。
2.复习安排的非精确性
复习过程的非精确导致复习安排的非精确性，即复习安排不必精确、复习安排拥有灵活性。 复习过程的高成本决定复习条目数量应有限、复习行为应低频。这导致记忆目标的变化，在记忆目标上从 “不能忘” 到 “允许忘”，允许“先忘记”等用到时再 “拾起来”，允许部分条目的熟悉程度降低到 “遗忘线” 之下，每次复习从关乎“复习效果”到关乎“复习过程”。基于此，复习安排并不需要一个精确的间隔，而是一个较长的间隔，但也不至于长到导致复习时毫无印象。
 3.在复习安排上引入定量与计划
在复习安排的非精确性、复习过程的高成本上得以引入新概念——定量与计划。通过有计划的安排每日的录入数量，合理分配复习任务，使得复习具有持续性（例如 “例题Kit”中的压力测算机制）。实践而言，对于大体量材料定量与计划远比评分预测更重要。</description>
    </item>
    
    <item>
      <title> 三个月跨考中国人大 </title>
      <link>https://www.huacishu.com/blog/2017/04/01/crusade1/</link>
      <pubDate>Sat, 01 Apr 2017 11:47:19 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2017/04/01/crusade1/</guid>
      <description>是从16.9.24到16.12.24，由河北工业大学土木工程到人大软件工程。
写这篇文章的家伙是不是又要标榜自己 “过人之天赋、过人努力”之类的东西啦？抱歉让你失望了😂，
两次高考经历已让我懂得在学习上没啥天赋，此外受时间限制，三个月时间也无法在努力超过他人，所以我要写的是过人之方法 ——行之有效、 有操作性的方法论。
我见过太多的人置身黑夜之中苦苦摸索与追寻，在一次次失败后最终放弃，我了解那种无助与渴求，这也是我写这篇文章的原因。我的方法是随时间逐步积累起来的，并在备考过程中加以检验与深化。考虑到将方法论穿插在备考时间线中写过于零碎，所以我就此分为两篇:
(1)《方法论》
(2)《时间线与各科分析》
题外话:为什么要考研?
“方向” 比 “方法” 更为重要，我并不认同考研这条路，即便是在考上之后。当然了，读研与否是算计来算计去最后被归为“仁者见，仁智者见智” 的说不准之事。若走__这条路是因为 “无路可走” 倒并不可怕，因为当只剩下一条路的时候，现实会促使人选择合理的目标，并坚定地走下去😳。
而我并非无路可走，这也就导致我在考研路上并不笃定，最终甘心在这条路上全力以赴源自我找到 “情绪的动力” ，这部分写的比较繁琐，因为本来事情就是很繁琐，若你也心存烦恼,或许可以从我的经历中得到启发。
大三寒假，也就是15年春节那段时间，是情绪很低落的一段日子——大学三年里好像一无所获，对大学失望至极——没长高、没长胖、没见到自己有何发展，眼界却更为闭塞，理想早已消失殆尽。虽半数课程均系自学，但终究是“虚无缥缈” 的学习能力，不像比赛有个证书能证明。
与其说对大学失望不如说对自己失望&amp;hellip;我在浑浑噩噩了几年后，俨然成为初来大学时所痛恨的人。我知道解决之道就是去划找份工作，少往学校里待着，为此在寒假里自学完了下学期的课程，但读研却承载了太多期望，于是在大三下学期我开始了一波三折的备考之路：
在师长推荐下选定某院校土木工程系，专业强势且难度不高可谓明智之选。但我对其毫无认同感，一想到就泄气，能看到的唯一优点就是它在市区，交通便利。但不久后校招意外得到份不错的工作，考研之心全无，第一次备考不了了之。等到暑假重新考虑读研一事。应该是学艺不精吧，听到 “配筋” 、“梁” 这类词就头疼，想到若考上还不得天天头疼？
于是我有了跨考计算机的念头，但同样没目标：南方不想去，北方知道的就那两所，凭我的才能（就是没啥才能🙄）一两年考上毫无希望，用个三五年考上了我也心里难受。所以就只好一面复习土木、一面自学计算机，外加参加比赛、学iOS&amp;hellip;.三天打渔两天晒网，到快开学时勉强看完《数据结构》，外加一部分数学基础班视频，结果找了套数学卷子发现没几道题会做😱。
坚持？放弃？土木？计算机？ 我一再权衡其中的利害关系，就像以前的权衡的结果一样，没结果。变数太多了，天知道以后会怎样。我最终醒悟，哪条道路都不不是太坏，关键是找一条走下去，当前我对读研不认同，那么就不能指望理性分析的动力，要靠情绪上的动力——我不甘心高考复读一年最后还是进了一所三流院校[1]，结果考研又考去一所二流院校，这不是我的“名校梦”。
于是我放弃了之前的目标，把一流大学列了个表，把土木、计算机各考什么科目、难度多大列出来，9月24号我找到了人大——名校、文科氛围、位于市区、招生少、难度不高。至于专业排名不靠前？可科研实力再高，像我这样一个水货未必能享受得到，还是“女生比例”务实一些。于是在9月24号我选定了人大软件工程。
12月24号就初试了，意味着我只剩三个月的时间。目前数学一塌糊涂，三门专业课中有两门没学过，政治尚未开始复习，英语还好，有一定的词汇量基础。可事后我才体悟到最大的阻碍并不是上面那些，而是这学期要上的7门课:
传言这届取消清考，如果挂科则等到下一年才有补考机会，考研成功也于事无补。去年就有学长的前车之鉴——高分一战成功却无奈挂了一科，只好二战。于我而言，此次考研若稍有不慎，不仅研考不上，甚至还会落得个延期毕业的下场。
能否在三个月时间里补齐统考科目、自学两门专业课、保证该学期七门课顺利通过，并成功考上人大？我没有多大把握，但多年积累下来的自学经验令我徒增胆识，无予无取、先予后取，我知道只要我付出足够多的努力，无论艰难险阻，决不放弃，必能得到我想要得到的东西[2]。 [1] 旁人说的再好，难改我心中定位。
[2]这句话是从杨鹏《GRE&amp;amp;GMAT阅读难句教程》的“序”中抄过来的￣ω￣。</description>
    </item>
    
    <item>
      <title> 三个月跨考中国人大:(1)方法论 </title>
      <link>https://www.huacishu.com/blog/2017/04/01/crusade2/</link>
      <pubDate>Sat, 01 Apr 2017 11:47:10 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2017/04/01/crusade2/</guid>
      <description>这篇文章所讲的方法是我能成功考上的关键，它在这篇文章的后半部分，直接看后半部分可能不大容易理解，所以前面写一下前期铺垫，纯属花哨的小技巧，不必深究
备考有好多令人头疼的地方，首先就是找个地方学习，总觉得在一所大学里说这话是不是有点“讽刺”意味。
教学楼里几间考研自习室人满为患，只能找没课的教室了（不要问我为啥不去图书馆自习&amp;hellip;哪有图书馆😤），奈何空教室查询机坏了修修了坏，修理师傅与查询机斗争了三年后终究是妥协了…结果就是只能在ABD三栋楼里一层一层转悠挨个找不上课的教室。
我要学的东西实在太多，与其背一大包书在楼层间穿梭，我只带电脑和文具，最多再放本习题册，再加上我的水杯后有5斤，虽然不轻，但相比背一包书起码心情了好不少:(
这促使我玩命实现文档的电子化，比如将笔记拍下来，做成电子版:
使用PDF版的课本:
针对没有PDF版本的书以及做过的习题进行手工电子化:
为此我还构建了一个 “快速启动器” :
它让我能快速打开常用文档:
好了，以上就是花哨的前期铺垫，你一定要知道的是，电子化不代表高效率，事实上往往电子化会导致低效率，我用电脑进行文档管理是无奈之举，如果有条件(固定的学习场所)，我会选择看实体书而不是电子书。纸质文档的易读性是电子设备(就是iPad、Surface、Macbook、Kindle..之类的) 所无法比拟的。我的切身体会是:如果实体书看起来很艰难，那么放到电脑上看就更为艰难；当参照一两个文档时，电子设备大体能应付，但若要来回翻页与勾画，或者参考多个文档时，简直让人崩溃。总之呢，学习新东西时，看纸质书才是务实之举，而当学完后想留个存档以备不时查阅，电子化才是好的选择。
真正能提高效率的是用电子设备进行 “复习管理”，充分发挥周期性复习的力量。在一年多以前，我做了一款名叫&amp;ldquo;拾忆笔记&amp;rdquo; 的Android软件，在上面投入了巨大精力，引入了复杂的遗忘预测算法（结果就是，如今想起来就头疼），但结果我发觉它并不好用。但问题是，看起来都很合理，不知是哪里出了问题。于是我决定寻找新思路，在电脑上构建“新拾忆笔记” :
我将要记忆的文档拖拽到拾忆笔记，它会按照预设的“复习周期” 测算需要哪天进行复习:
(我将文档“costFunction.m” 拖拽进拾忆笔记，拾忆笔记根据之前我设定好的复习周期，决定在明天提醒我复习一次。因为当我点击&amp;rdquo;未来&amp;rdquo;按钮切换到 “明天”后，可以看到拾忆笔记显示了“costFunction.m” )
以上是针对 “普通文档” 的复习，这远远不够，考试考的是对知识点的应用、是对题目的熟练度，拾忆笔记Android版就是为此而作，电脑版自然不会把核心丢下，为此我构建了“例题Kit” ，一个专门为复习例题而做的模块，特点在于引入了“压力测算机制”（因为例题复习需要较长时间，如果想有持续性，就必须均衡每日的复习压力，这一点是我在背GRE单词时学到的）:
我是这样使用 “例题Kit” 的：
我将那些要记忆的例题用手机拍下来：
( 图中是《计算机网络》辅导书中某题目的答案)
然后进行电子化存档，并给题目编号：
（图中软件叫做DEVONthink，是一款macOS下的文件管理软件，Windows平台下有更为丰富的替代品，此外，例题Kit采用的是编号机制，即通过例题号来寻找例题，并不一定需要电子化归档，用一个纸质笔记本就可以🙂） （将试题电子化并无想象中的麻烦，我不是拍一道存一道，而是拍前先标上题号，等中午或晚上全部录入）
最后，我将例题纳入拾忆笔记的复习计划:
（将 “例题124” 纳入 “CS” 学科 的复习计划）
拾忆笔记是有效的、例题Kit是有效的，因为它们都是在做一项任务 “周期性复习”提醒，周期性复习是有效的，因为周期性复习能提高 “保持力”，而“学习力=理解力+保持力” （这里指 “较长时间” 内的偏应试能力的学习力）。
名师讲解、大量练习、（当然还有天生聪明😍）提升了第一点“理解力”，即对问题的理解程度、高超的见地。而第二点“保持力” 不容忽视，就好比总不能拿个“没底”的桶去打水，再高明的结论，记不住亦是空谈。
虽然备考时间很短，并且我也没有过人的理解能力（我不是看一遍就会的人），但在这有限的时间里“只学一遍” 的时间是有的。可一般人不能保证学完一遍之后前面的东西都还记得，而如果不记得又如何做到融会贯通？于是乎往往还有第二遍、第三遍、第N遍，而效率就是在后面的这几遍“复习”上差出来的。
我有拾忆笔记，而拾忆笔记就是保持力，不是说只看一遍，我看了好几遍，但我更为合理，我在留有印象时就进行了复习，并且是有重点的精确式复习，而不是等到没了印象，又花费很大劲好似重学一遍。比如，一道题，今天搞懂了，过了10天，很多人记不清了，我还记得。等过了一两个月，大部分人毫无印象可我依旧记得，甚至做得比两个月前还熟练，这样效果就差出来了。
数学方面我一共存档了509道例题，其中录入拾忆笔记近300道，虽然我数学做题的不多(下一篇 “单科分析”中有提到)，但只要录入拾忆笔记的题目我都会做，300例题中大部分我周期性地复习了4遍以上，多者甚至有6、7遍，并且还进行了分类整理，到最后这部分内容可谓已融入我心。
（侧边栏中显示 “数学例题”数量是489的原因是我删去了部分例题，但例题标号未改动）</description>
    </item>
    
    <item>
      <title> 三个月跨考中国人大:(2)时间线与各科分析 </title>
      <link>https://www.huacishu.com/blog/2017/04/01/crusade3/</link>
      <pubDate>Sat, 01 Apr 2017 11:46:54 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2017/04/01/crusade3/</guid>
      <description>时间线 构建拾忆笔记的时间线： 7月2日 我决定摆脱以往的思路，重头开始，构建新的拾忆笔记 7月26日 采用 “定量思想” 开始构建GREKit，8月9日加入句子Kit模块。 8月20日 加入例题Kit模块，这个时候,我对 “例题” 的复习方式没有正确的认识,只求混个“脸熟” ,认为将题目看一看,想想思路即可,而不是重新做一遍,结果越复习越不会,最后效果很差。在9月中旬,我 “看了”(因为不会做😂) 套数学真题后决定重新做人，反思到如何进行例题复习,最终明确方法:若要有回报则必须先投入， 复习时一定要老老实实重做一遍。这是需要时间的,为了防止每天要复习的内容太多,我在9月28日将GREKit上的 “定量思想” 引入例题Kit，通过合理安排每日例题的录入数量，从而限制复习数量。
考研时间线： 9月24日，我找到了人大这一考研目标，并从学硕调整为专硕，一方面是时间有限，改为专硕后备考任务量有所下降(“英一数一”变为“英二数二”)，另一方面是若成功考上还能少上一年 (之前对考研一点也不关心，快预报了名还不知道学硕与专硕的区别…多亏舍友告诉我,把我拉回来:)。虽然调整为专硕,但感觉还是没时间,周一至周五,每天少说一节课，多则三节课还附赠一节晚上的上机课😱😱
并且也不能逃，因为几个老师好喜欢点名，天知道会不会因为逃课最终挂掉你。若因逃课弄得个满盘皆输，非明智之举。所以,我面临一个不大好办的境况:
考研投入过多时间-&amp;gt;挂科-&amp;gt;无法毕业，读研泡汤 考研投入时间不足-&amp;gt;分数不够，无法考上
好似最初选定人大这一目标，结果便早已注定，只能是取决于水平和运气吧。
10月2日 开始复习政治，用的PDF版的解析，主要在上课的时候看。
10月3日 开始自学数据库，同样PDF课本，不过从图书馆借到本纸质的习题集~ ￼
上课时得一边复习一边提防着老师，课心情不好、身心疲惫，但而宿舍亢奋的家伙们不到11点不安生，11月15日 ，我到学校周边租了个房子，一个人的环境对我对心情有极大帮助。有时傍晚5点多觉得累了就回去睡一会，晚上8点多睡醒了接着学，自从租了房子，我感觉每天的学习时间至少能延长1个小时😇 10月17日，开始自学计算机网络，这么厚的书当然依旧是PDF版本的：
但它实在太厚了，知识点繁多，看一章少说一个小时，并且许多地方还看不大懂。
10月18日 晚上我陷入了恐慌，我感觉这样下去最终是学不完的，为此我得出一个观点: “必定有科目时间不够，要有所取舍、合理分配时间。”为此我对剩余时间进行了预估:
并且，我还做了一个表格，记录每天在各科的投入时间，最终这个表格是这个样子的:
(表格里的时间不包括使用拾忆笔记的时间,在拾忆笔记上用时每天10分钟~1个多小时不等，具体和任务量有关。我尽量把这部分时间放在课上进行，算是合理利用吧🤔)
最初我预估每天能投入8小时在学习上，但实际上过于乐观了，即便我是按 “番茄钟” 上的50分钟当1小时来计。最后除&amp;rdquo;数学&amp;rdquo;与&amp;rdquo;数据库&amp;rdquo;外，剩余几科都有所超时,从10月19日-12月16日（16号后就开始总复习，也就不记录了）,共59天的时间投入:
数学:137小时
英语:21小时
政治:50小时
专业课:166小时
合计:324小时，平均每天只有6.4小时,并且这些时间里还包括 “课上时间” ，这段时间效率很低，我就拿来看政治了….结果政治翻车了😂
我有两个关卡要闯，一是考研初试、二是期末考试。因为初试完后马上就是接连而来的期末考试，可谓 “前有追兵后，有堵截” ,若第一关不过在自信心上定会备受打击，若第二关战败则满盘皆输。
12月24~25，第一关的考研初试，感觉没发挥好(具体见后面的各科分析)，其实根本原因还是准备不充分，但因为目标选择合理，尚存希望。接下来第二关: 12月27日 《PKPM》上机考试，这是我最为担心科目，因为我听不懂在讲什么😭。如果自学的话，我不认为这门课有多大难度，但我不想浪费备考时间去自学，最终考试稀里糊涂60多分险过。纯粹是运气。
12月29日 《工程施工》《砌体结构》考试，两门课的老师都给了重点，虽然经考场检验这重点可信度不高，但还是顺利考过啦。
1月4日~8日 《砌体结构》 课程设计，这几天发烧头昏脑涨的，最后课设有不少错误与遗漏之处，8号晚上感觉课设要挂了，无力的躺在床上感叹,自己闯过了初试、闯过了PKPM&amp;hellip;本以为胜利在望，可最终却被整死在课设上，功亏一篑，所有努力化为泡影…感叹大学四年“业没毕成、研没考上、女朋友也没有”人生真是失败😭&amp;hellip;但不可思议的老师竟然给通过了😲
1月13日 《基础工程》考试，大学最后一门考试，难度不大并且课设过了好高兴，加上再无它事阻碍，我得以全力以赴，毫无悬念啦。
2月16日 查询初试分数381，开始准备复试。
3月2日，第一次去人大，看到大门真兴奋；在面试时,我把自己的自学历程、做拾忆笔记的经历说了说，最后不忘以杨鹏的那句话收场，从在座的反应看大局已定，回旅馆的路上却开始失落…随后心情低落了好多天。
3月31日 我的名字出现在了录取名单上。 各科分析 数学:</description>
    </item>
    
    <item>
      <title> 我是如何40天学自完5门课程的 </title>
      <link>https://www.huacishu.com/blog/2016/03/03/first_attempt/</link>
      <pubDate>Thu, 03 Mar 2016 07:06:41 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2016/03/03/first_attempt/</guid>
      <description>一学期过后,有点怅然有所失的感觉,于是打算寒假先把下学期的课程学一学:)
四年以前，我看到有个高手一年搞定了MIT33门课程，很是厉害， 当时看人家的博客看了好几遍，没看懂，可能是和人家差距太大吧（不过印象尤深的是一个叫&amp;rdquo;费曼原理&amp;rdquo;的东西） 后来我多次尝试自学，但不得方法，成果寥寥，直到在Android方面砸了很多时间后摸索出一点门道。
从半年前3个星期左右(60~70小时)学完一门课程
到如今40天（近200小时）弄完5门，感觉比以前快多了~ 不过依旧不会啥&amp;rdquo;费曼原理&amp;rdquo;，也没找到能阶跃过程的神奇方法，具体的说： 策略：抓重点，自学前我找到了往年试卷，复习资料。
方法：
1.在短时间内突破
如果一门课程能在短时期把基本体系搞定，遗忘的干扰变小；另外一鼓作气的道理，战线太长会无疾而终掉。 具体操作是：书易懂直接看书，不易懂则先看视频后看书（看视频时可加速播放）。
2.做成易于复习的形式
遗忘不可避免，复习虽可减缓遗忘但需时间投入，比较有效率的方法是，确保在忘记后快速重新记忆，保证在使用期（比如，考试期间）的可用状态,也就是要提升复习的速度：
1）以简洁的形式来表达
在混乱中建立新秩序 我的课本是旧书，之前的那家伙画的乱糟糟-_-||
我则直接贴张纸&amp;hellip;好看多啦~
2）聚合关键点
将重点、关键方法之类归纳在一张纸上
3）在课本上勾画
课本上的连缀部分是承载简洁部分的基础，当忘记很多后，单看简洁部分就不知道在说啥了，须重看课本。
2.用自己的语言来表达
例题的过程往往精简，很难看懂，所以自己解析一下，画画示意图写写考点，再看时容易看懂。
一门课程的深入学习需要长时间投入，不是几百小时能搞定，这点我在自学Android时深有感触；以上的&amp;rdquo;学完&amp;rdquo;指仅仅理解大体内容，能够通过学校考试的程度。 不过人外有人，能在极短时间内掌握整个学科体系的实在是可怕。 以上所写必有不当之处，尽请斧正~</description>
    </item>
    
    <item>
      <title> 拾忆笔记 </title>
      <link>https://www.huacishu.com/blog/2015/12/11/mymemo/</link>
      <pubDate>Fri, 11 Dec 2015 12:55:02 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2015/12/11/mymemo/</guid>
      <description>本文章仅供存档，该版本已不再维护
简介 学过的知识点，总是记不住？  做过的题目，过一阵子就跟没做过一样？ 我曾此为而烦恼，希望有东西能解决这个问题，空空盼望多时而无果后，终于,我决心自学编程，do it myself~，于是便有了&amp;rdquo;拾忆笔记&amp;rdquo;~ 你可以用它来录入平时的笔记\试题资料，它会根据遗忘曲线提醒你复习记忆，让你提高记忆力水平。 如果你从不为记忆问题而担忧，那么你完全用不着&amp;rdquo;拾忆笔记&amp;rdquo;，关掉这个网页，愉快的去做点别的事情~ 如果你也为之而烦恼，快去尝试一下&amp;rdquo;拾忆笔记&amp;rdquo;~ 对我而言，它很不错~ 尽管在易用性,细节上远比不过那些商业软件， 不过它已经是&amp;rdquo;可用&amp;rdquo;的范畴，并且我也会不断改进. 就酱。
使用帮助 基本使用: 使用进阶: 1.条目页面： 
2.笔记浏览页面： 3.条目复习页面： Q&amp;amp;A &amp;ldquo;拾忆笔记&amp;rdquo;使用了什么算法？ 算法基础是SuperMemo 公开的SM2与SM5算法，以及AnyMemo的算法（基于SM2），另外因为SuperMemo现有算法不能生搬硬套用来&amp;rdquo;试题&amp;rdquo;、&amp;rdquo;笔记&amp;rdquo;等大体量材料上，另一方面&amp;rdquo;依靠而不依赖于算法&amp;rdquo;的思想，在上述诸位的基础上进行了一些必要简化与扩充。不过基本思想还是与SM无二的&amp;rdquo;分级思想&amp;rdquo;——&amp;gt;为条目设置难度因数EF，通过评分修正这一强度因数，依靠强度因数计算复习间隔。
&amp;ldquo;拾忆笔记&amp;rdquo;是另一个SuperMemo？ 比如呢，&amp;rdquo;SuperMemo体验欠佳，然后去做一款SuperMemo改良版&amp;rdquo;，像AnyMemo、Mnemosyne、各类依靠记忆曲线的背单词的软件做的已经够多了，然后，我就没必要自己做了~~&amp;ldquo;拾忆笔记&amp;rdquo;相比于前者有俩不同点：
 理念：认同复习重要性而不盲从于复习、依靠而不依赖记忆算法、考虑用户自主性。
 专注点：专为记忆平时学习中的笔记、试题而作，专攻即时录入而作，因此拥有更便捷的录入功能、更适合的条目展示方式以及更贴切的算法。
  &amp;ldquo;拾忆笔记&amp;rdquo;是一个相册？ &amp;ldquo;录入一段文字在狭小的手机屏幕上点个不停&amp;rdquo;、“录入试题中的图例要扫描到电脑上…&amp;rdquo;，这太反人类了~，相比之下，唯有&amp;rdquo;光影&amp;rdquo;是最高效的录入方式，所以我选择了相机作为输入方式，图片作为内容的载体，然后你就可以愉快的录入各种东西啦~不光是笔记，你可以用它来当相册用，定期复习一下~ 不过我可要告诉你，一点儿都不好用， have fun~
何时会支持词库导入？ &amp;ldquo;词库&amp;rdquo;表明要记忆的内容是可提前预知的，而&amp;rdquo;拾忆笔记&amp;rdquo;则为了这种需求而生：&amp;rdquo;要录入的材料是提前所无法预知的&amp;rdquo;，就比如你在今天不会预知明天会学到哪些重点内容，有哪些东西需要记忆，明天要录入的内容对于今天的你都是&amp;rdquo;未知&amp;rdquo;的，因此也就不存在&amp;rdquo;导入词库&amp;rdquo;这个东西，每个&amp;rdquo;笔记本&amp;rdquo;呢就是一个&amp;rdquo;词库&amp;rdquo;，而这个词库则是自己在使用过程中逐步创造的~ 因为当前这种&amp;rdquo;即时录入&amp;rdquo;功能还并不能让人十分满意，因此暂不会推出词库导入功能。总之呀：
如果你要用手机背考研5000词，那么SuperMemo之类的软件会更适合你；如果你只是要对所学内容做一个单纯的记录归档，毫无疑问，印象笔记、有道笔记；但是，如果你&amp;rdquo;不止于记录&amp;rdquo;，希望对所学内容高效记忆，&amp;rdquo;拾忆笔记&amp;rdquo;会是个不错的选择。
会不会推出IOS版本？ 等我有钱换iPhone… &amp;gt;_&amp;lt;
下一版何时推出？ 课业繁忙，外加&amp;rdquo;小打小闹&amp;rdquo;式的修修补补不是我的风格，所以，我也不知道=.=
反馈\建议\吐槽？  可以去论坛发帖子 talk.huacishu.com,或者发邮件给我 sakura@huacishu.com
我与&amp;rdquo;拾忆笔记&amp;rdquo; 到讲故事的时间啦^_^ 09年年初，我接触到SuperMemo，被其理念所吸引，后在10年（高一）入手一台WindowsMobile，使用SuperMemo手机版来记单词、公式、文言文之类的东西…使用近两年，逐渐感到SuperMemo有一些不太好用的地方，比如：
 数学算法不能切合全部条目，一些条目安排间隔过低，频繁出现让人厌烦；一些条目间隔过大，等下次出现时早已忘得一干二净，而对此我却无法干涉，只能跟着算法走。
 电脑版虽可以录入图片但操作繁琐且学习成本巨大；手机版只能录入文字，无法录入每天学习的笔记内容与试题。
 只要是录入的内容，SuperMemo就将一直保存在复习队列中，无法停下来，且每次录入的内容都会被当作新条目对待。
  针对试题这一点，我想过如下解决方法：&amp;rdquo;给试题标上序号，并将序号录入SuperMemo，之后按序号索引的方式进行复习。&amp;rdquo; 但渐渐感觉到自己被算法绑架： 一些试题感觉记忆程度尚可，复习为时太早，而SuperMemo指定今天复习。依照算法复习一遍浪费时间，违背算法不复习又导致算法被打乱，以后的复习安排背离实际。这种现象在&amp;rdquo;小体量&amp;rdquo;的单词方面并不明显，因为复习一次花不了几秒钟，但在试题这种大体量内容前就再不适合，于是在用了这个方法近两个月后，因严重的效率问题，我放弃了这个做法。 我感到SuperMemo在记忆试题方面有如下不足：
 剑走偏锋，过度依赖数学算法</description>
    </item>
    
    <item>
      <title> 我的Android自学之路 </title>
      <link>https://www.huacishu.com/blog/2015/12/08/forone/</link>
      <pubDate>Tue, 08 Dec 2015 21:01:27 +0000</pubDate>
      
      <guid>https://www.huacishu.com/blog/2015/12/08/forone/</guid>
      <description>有自己做软件（拾忆笔记）的打算后,2013年高考后的暑假，我开始尝试用VB来做，因为在初中时有自学过一点VB，可毕竟学的只是皮毛，一开始就卡在了富文本编辑器上，感觉自己水平太差，于是退一步，转而自学C语言，但因为方法不得当，未有所收获。
大一多出于对大学的新奇，天天泡在自习室里，期间虽有接触iOS，看了语法书，跟着弄出来一个Hello World，然后，书上写的就看不懂了=。=，另外又因为自己的决心与动力不足，未果~ 大二开学前一天，突然冒出想法，想要为喜欢的女孩做款小软件^_^，可是没钱买iPhone。。。
-.-，于是舍弃iOS，兴冲冲的去学Android啦. 情绪上的驱使给了我无穷的动力与巨大的决心，用了十多天装上AndroidStudio，闯过安卓学习道路上的第一道槛，后又花两百多买了台安卓机，自此开始Android自学之路。
虽然有VB编程基础，外加大一所学的计算机知识，可我基本还是什么都不会，真可怕——对 &amp;ldquo;面向对象&amp;rdquo; 一知半解，回调与线程一概不知。不过当时我凭着中二精神，跳过了Java语法，在优酷找了套教程直奔Android开发，而不是像学iOS时那样先从图书馆找本语法书看。 （我现在觉得这才是正确的学习方法，Java只是Android用来解决问题的一个工具，在没有了解问题之前，先去学习工具是乏味而无重点的；只有当对问题有了一定了解，有了困惑，转而回头学习工具，才会有针对性以及更浓厚的兴趣和更深的理解。）
大二课很少（外加有的课我也不去），于是常常一个人带着我的小超级本（外加充电器）去自习室，把视频2倍速过一遍，截屏下来照着敲，不知不觉一下午就过去了，然后晚饭过后回自习室接着弄，直到教学楼关门，而周末的时候就干脆在宿舍敲两天代码。 在学习Android中我逐渐积累了很多对Java的困惑，于是转而回头自学Java语法，从Mars老师的Java4Android开始，后又看了李兴华老师与马士兵老师的相关课程，对Java有了个大概了解，同时也体会到向不同老师学习的重要性。
没VPN，Developer网站上不去，我能获知Android 中&amp;rdquo;未知领域&amp;rdquo;的途径只有视频教程与书籍扫描版的PDF，可是视频教程多讲基础，书籍则是看不懂外加讲基础，导致我在Android学习上进程缓慢。 当时有曾尝试使用GitHub，不过参考教程说的不透，自己用AS一导入GitHub项目就报错误，没办法运行，我只能新开一个工程，再将人家的源代码、xml一点点复制进去来运行，这种感觉太痛苦。
于是乎，我便开始了造轮子之旅-.- 比如，我不知道有viewPager这个东西，想实现翻页效果，于是捣腾半个多月，自己算加速度配合三个View去实现翻页效果，至此实感Android开发真是有难度呀….以至于我后来见到有ViewPager这东西的时候异常兴奋，简直是重生了对安卓的希望~
到15年寒假，我做出了那个小软件，虽然和预想的差距太大。。。。不过，在此时安卓上面我也有了一定基础，于是进而我开始在安卓上制作&amp;rdquo;拾忆笔记&amp;rdquo;第一版，但直到寒假结束，也只弄出一个&amp;rdquo;半成品&amp;rdquo;：
（主页面)
（&amp;rdquo;图片裁剪&amp;rdquo;页面)
正如你所见：
 从界面上说它太丑了-.-
 从功能上说呢：
 内部逻辑太复杂，没能把复习模块整合进去
 图片裁剪页面，我仿的iOS图片裁剪（是的，看起来不怎么像），当裁剪到一定大小会引起程序崩溃
 关于图像的&amp;rdquo;扭曲矫正、增强锐化&amp;rdquo;，我不知道原理，没能力去实现它
 相机模块没能实现点按对焦，developer的解释真是极简，而Stackoverflow上则是写啥的都有，实在看不懂…
 ….
   总之，这个东西远远达不到要求，即便是单纯拿来当个相册用…而这就是我花了1000多小时，自学半年后的成果&amp;gt;&amp;lt; 大二下学期，被拉去参加学校的&amp;rdquo;PPT创业大赛&amp;rdquo;^^，在App界面研究上我投入不少心力，初识DrawerLayout与PagerIndicatior，总算是做了一个界面&amp;rdquo;能看&amp;rdquo;的App。（话说这个界面布局写的可真痛苦！）
比赛最大的收获是结识了一个Java EE方面的高手，话说见识到真正的高手才能有所提高，他给了我莫大的启发，另外由他介绍，我加入了学校的一个创业团队，从而我也有了更好的学习环境（不过我觉得还是自习室更适合写代码~），期间根据团队需要我做了另一款软件：
多少摸索出了软件的大体构架设置，接触了蓝牙通信、Service、图片模糊处理….，但其中的最大的收获是，我终于摸索出了怎么调AndroidStudio的&amp;rdquo;软件设置&amp;rdquo;，真是一大进步。 自学安卓以来我一直面临一个严重问题：AndroidStudio中写的代码无法像Intellij那样直接在另一个项目重用。这个问题严重影响我的效率，因为如果我想重用以前写的代码或者xml布局，我只有两条路可走：
1.将文件一个个复制到新项目，并且复制过后还要修改import xxx.R
2.在新项目引用一个Library Module，之后，AS用起来就慢死个人，慢死个人，慢死个人。。。 深受该问题烦恼，我决定通过深入学习来寻找解决之道，于是暑假开始学Maven，因为我隐约感觉到解决之道就在这个地方， 但是学完后虽懂得了各种pom标签，让人头晕的生命周期，但究竟如何与AS相联系？
真是迷茫。因而我进一步去学Gradle。。在看了几本书后发现依旧解决不了自己的问题，感觉书里重语法而轻实践，在实际项目中的应用少有涉及；且Gradle精髓在于其插件，但官网的插件说明写的可真是简练……
于是，我决定自己做个软件解决掉它： 整体思路——在电脑上建立一个文件库，点个按钮就把里面的xml、java文件通通复制到新工程，顺便修改import信息，更新旧版本什么的， 于是我跑去学Swing，捣鼓了三四天： 结果嘛，整体上没啥大问题，但用起来就是不踏实，复制来复制去，搞得心里没底。 所以，我决定这个问题暂且搁置，先去解决其它方面的问题。（我发现每当在Android上遇到无法逾越的障碍，就横向去学点其它的，过段时间有了新见解，障碍也就消除了。） 对我而言，图片处理也是一个大问题，为此我请教过计算机系的同学，可是呀…哎…问题没解决。于是我在VeryCD找了份中科院数字图像开始自学， 看了不到一半看不下去了，虽理论上能猜个半懂，但操作上却一概不知，无奈作罢。而后又去看了烟台大学一位老师的数学建模，也算是有点收获吧，起码是对matlab有了点了解。不过这都是副产品，真正的收获是我遇到了转机，因为期间偶然看到一篇介绍Android技术的文章，从而&amp;rdquo;重新&amp;rdquo;发现了新天地——GitHub，在此时，前期学的Gradle派上了用场，我终于弄通了如何使用GitHub上的项目，由此我在安卓学习之路步入坦途。 RxAndroid、ORMLite、AndroidAnnotation、UniversalImageLoader通通被我收入囊中，进而，我拆了OpenCamera，搞定了相机点按对焦，然后又拆了TextFariy，搞定了增强锐化，顺便也把Git学了，另外从StickerCamera上面，在软件构架上受到很大启发…. 于是乎，要用到的几个模块就这么被凑齐了^_^ ，不过此时，我发现自己又遇到了之前的那个人问题： 我无法重用这些模块，甚至不能靠粘贴复制来解决，因为有俩模块复杂到无法复制。如果作为library，那么我的电脑根本就带动它，它太大了，编译一次就得半个钟头。 这个问题始终横亘在我的安卓之路上，而且似乎是个无解的问题， 安卓这条路走了一大半了，就要到终点时却发现前方死路一条，无路可走了，真是百感交集！ 学了Android近一年，投入2000多小时，却连个TitleBar都要自己做，连一个像样的提示框都写不出来， 感叹同样的一个东西，为什么安卓上实现起来就那么难，为什么谷歌做的东西就这么烂，为什么安卓上有这多障碍… 我一度停顿了半个多月，在临近大三开学之时，一向幸运的我找到了新途径：将各个模块打包成aar包，发布到本地maven库，然后在主项目中引用它们。 哈哈，问题解决，此时&amp;rdquo;拾忆笔记&amp;rdquo;主要技术已经掌握，不过还没有界面设计。关于界面与交互，我总有更好的想法冒出来，可这些想法又受到技术与时间上的制约，我画了许多设计草图，但效果却总不尽如人意。可没有确定的界面，App就无法继续做下去，项目再次停滞，虽然技术上离目标越来越近，但内心却感觉目标越来越难以实现，心里真是慌乱。不过几天之后，心慢慢静下来，发觉如果尚没有满意的设计，那就先从不满意开始。我现在需要的是从0到1的突破~ 于是花了一天边学边做，用JustInMind搞定了第一版界面：
有了界面之后，就可以开工写代码了~ 在此期间，经过技术实践与设计理念的相互磨合，并一路搞定jni、混淆、图标、备份、以及杂七杂八的细节问题，于15年十月下旬做出了第一个版本，并在此基础上纠正了好似无穷无尽的小问题，搞出了第一个公测版：</description>
    </item>
    
  </channel>
</rss>